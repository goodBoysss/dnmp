
user  nginx;

#
# 这将根据系统的CPU核心数自动设置Nginx工作进程的数量。您也可以手动指定一个数字。
#
# worker_processes  auto;
worker_processes  1;

#
# 这将增加Nginx工作进程的文件描述符限制。您可以根据需要设置适当的值。
#
# worker_rlimit_nofile 10000;

pid        /var/run/nginx.pid;
error_log  /var/log/nginx/nginx.error.log warn;

events {

#
#     使用epoll事件驱动模型可以提高Nginx的性能。`worker_connections`参数定义每个工作进程的最大并发连接数。
#
#     use epoll;

    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/null;
    #access_log  /var/log/dnmp/nginx.access.log  main;

    # hide verson string
    server_tokens  off;
    sendfile        on;
    # tcp_nopush     on;

#
#     这些参数用于调整客户端请求和响应的缓冲区大小。您可以根据应用程序的需求进行适当的调整。
#
#     client_body_buffer_size 10k;
#     client_header_buffer_size 1k;
#     client_max_body_size 8m;
#     large_client_header_buffers 2 1k;

    client_max_body_size 100M;

    keepalive_timeout  65;

#
#     启用Gzip压缩可以减小传输的数据量，加快页面加载速度。您可以根据需要调整压缩级别和适用的文件类型。
#
#     gzip on;
#     gzip_comp_level 5;
#     gzip_min_length 256;
#     gzip_proxied any;
#     gzip_types text/plain text/css application/json application/javascript text/xml application/xml+rss application/atom+xml;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/conf.d/wanxin/*.conf;

    # 测试workerman
#     include /etc/nginx/conf.d/workerman/*.conf;

    # 测试swoole
#     include /etc/nginx/conf.d/swoole/*.conf;

}
